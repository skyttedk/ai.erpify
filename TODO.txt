

seperate database for unit test.
in config file, define database name for running unit test.
  then before test, db schemasync.. and use that db




pasword hasing:

     * Mock hash implementation for testing
     * In production, this would use a proper hashing algorithm like bcrypt
     
menu....

   documentation for fields is in field template,   wich makes no sence...
   it should be on the model....

   also... documentation  should be just one field
   
   documentation should be exported as tool top to client



calling action from pages...
  also, how to send current rec.. with it!!

user table

login form

delete record
create new record


list forms



--- refactor optimizations ----


Implement proper authentication: The current token verification is a placeholder (return true). Implement JWT-based authentication.

Improve error handling: Implement consistent error handling and logging across the application.

Standardize coding style: Implement ESLint and Prettier for consistent code formatting.

Add JSDoc documentation: Improve code documentation, especially for API endpoints and model methods.

Optimize socket service: The current implementation has unnecessary reconnection logic and could be more efficient.

Optimize database queries: Review and optimize database access patterns in the ORM.

Refactor the models system: The current model system seems complex - consider simplifying it.

Implement HTTPS: Ensure all connections use HTTPS in production.

Add proper CSRF protection: Implement CSRF tokens for added security.

Documentation: Create comprehensive developer documentation.



