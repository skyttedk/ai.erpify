# History API

The **History API** is a JavaScript API that allows you to interact with the browser's session history (the stack of pages the user has visited in the current tab). It enables you to manipulate the browser history programmatically without reloading the page, which is essential for building **Single Page Applications (SPAs)** or adding dynamic navigation to web applications.

---

## Key Features of the History API

1. **Manipulate the Browser History**:
   - Add, modify, or remove entries in the browser's history stack.
2. **Change the URL Without Reloading the Page**:
   - Update the URL in the address bar without triggering a full page reload.
3. **Enable Back/Forward Navigation**:
   - Handle user navigation (e.g., clicking the back/forward button) dynamically.

---

## Core Methods of the History API

1. **`history.pushState(state, title, url)`**:
   - Adds a new entry to the browser's history stack.
   - **Parameters**:
     - `state`: A JavaScript object associated with the new history entry (can store data like page state).
     - `title`: Currently ignored by most browsers (pass an empty string `""`).
     - `url`: The new URL to display in the address bar (must be of the same origin).
   - **Example**:
     ```javascript
     history.pushState({ page: "dashboard" }, "", "/dashboard");
     ```
     This changes the URL to `/dashboard` without reloading the page.

2. **`history.replaceState(state, title, url)`**:
   - Modifies the current history entry instead of adding a new one.
   - Useful for updating the URL without creating a new history entry.
   - **Example**:
     ```javascript
     history.replaceState({ page: "settings" }, "", "/settings");
     ```
     This updates the current URL to `/settings` without adding a new entry to the history stack.

3. **`history.back()`**:
   - Navigates to the previous page in the history stack (equivalent to the user clicking the back button).

4. **`history.forward()`**:
   - Navigates to the next page in the history stack (equivalent to the user clicking the forward button).

5. **`history.go(delta)`**:
   - Navigates to a specific page in the history stack relative to the current page.
   - **Example**:
     ```javascript
     history.go(-2); // Go back 2 pages
     history.go(1);  // Go forward 1 page
     ```

---

## The `popstate` Event

- Fired when the active history entry changes (e.g., user clicks back/forward or `history.back()`/`history.forward()` is called).
- Use this event to handle dynamic content updates when the URL changes.
- **Example**:
  ```javascript
  window.addEventListener("popstate", (event) => {
      console.log("Location changed to:", window.location.pathname);
      console.log("State:", event.state); // Access the state object
      // Update the UI based on the new URL or state
  });